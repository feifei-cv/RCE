Namespace(arch='resnet50', batch_size=32, bottleneck_dim=256, data='Office31', early=3, epochs=20, iters_per_epoch=1000, log='logs/RCE/Office31/Office31_W2D', lr=0.01, lr_decay=0.75, lr_gamma=0.001, momentum=0.9, mu=2, multiprocessing_distributed=False, num_class=31, per_class_eval=False, phase='train', pretrain=None, pretrain_epochs=0, pretrain_lr=0.001, print_freq=100, root='/disks/disk0/feifei/paper/paper3-3090/data/office31', seed=2, source='W', strongaug=True, target='D', temperature=2, threshold=0.97, trade_off1=0.5, trade_off2=0.5, trade_off3=0.5, transform_type='randomcrop', weight_decay=0.001, workers=8)
train_RCE.py:131: UserWarning: You have chosen to seed training. This will turn on the CUDNN deterministic setting, which can slow down your training considerably! You may see unexpected behavior when restarting from checkpoints.
  warnings.warn('You have chosen to seed training. '
=> using pre-trained model 'resnet50'
lr: 0.001
/home/dingfeifei/anaconda3/envs/py/lib/python3.7/site-packages/torch/nn/functional.py:2398: UserWarning: reduction: 'mean' divides the total loss by both the batch size and the support size.'batchmean' divides only by the batch size, and aligns with the KL div math definition.'mean' will be changed to behave the same as 'batchmean' in the next major release.
  warnings.warn("reduction: 'mean' divides the total loss by both the batch size and the support size."
Epoch: [0][   0/1000]	Loss 4.06 (4.06)	correct_t loss 0.09 (0.09)	SSL Ls 0.00 (0.00)	s_Acc 0.0 (0.0)	t_Acc 0.0 (0.0)	Reg Loss 0.98 (0.98)
Epoch: [0][ 100/1000]	Loss 0.51 (0.99)	correct_t loss 0.01 (0.02)	SSL Ls 0.05 (0.05)	s_Acc 100.0 (91.9)	t_Acc 100.0 (91.1)	Reg Loss 0.83 (0.91)
Epoch: [0][ 200/1000]	Loss 0.41 (0.72)	correct_t loss 0.01 (0.02)	SSL Ls 0.06 (0.07)	s_Acc 100.0 (95.9)	t_Acc 100.0 (95.5)	Reg Loss 0.71 (0.84)
Epoch: [0][ 300/1000]	Loss 0.38 (0.62)	correct_t loss 0.02 (0.01)	SSL Ls 0.06 (0.06)	s_Acc 100.0 (97.2)	t_Acc 100.0 (97.0)	Reg Loss 0.68 (0.79)
Epoch: [0][ 400/1000]	Loss 0.36 (0.55)	correct_t loss 0.02 (0.02)	SSL Ls 0.05 (0.06)	s_Acc 100.0 (97.9)	t_Acc 100.0 (97.7)	Reg Loss 0.66 (0.76)
Epoch: [0][ 500/1000]	Loss 0.34 (0.51)	correct_t loss 0.02 (0.02)	SSL Ls 0.02 (0.06)	s_Acc 100.0 (98.3)	t_Acc 100.0 (98.2)	Reg Loss 0.64 (0.74)
Epoch: [0][ 600/1000]	Loss 0.33 (0.49)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.05)	s_Acc 100.0 (98.6)	t_Acc 100.0 (98.5)	Reg Loss 0.63 (0.72)
Epoch: [0][ 700/1000]	Loss 0.31 (0.47)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.05)	s_Acc 100.0 (98.8)	t_Acc 100.0 (98.7)	Reg Loss 0.59 (0.71)
Epoch: [0][ 800/1000]	Loss 0.35 (0.45)	correct_t loss 0.02 (0.02)	SSL Ls 0.06 (0.05)	s_Acc 100.0 (99.0)	t_Acc 100.0 (98.8)	Reg Loss 0.63 (0.70)
Epoch: [0][ 900/1000]	Loss 0.33 (0.44)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.04)	s_Acc 100.0 (99.1)	t_Acc 100.0 (99.0)	Reg Loss 0.63 (0.69)
Test: [0/4]	Time  3.888 ( 3.888)	Loss 8.2983e-05 (8.2983e-05)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
 * Acc@1 100.000 Acc@5 100.000
lr: 0.0005946035575013606
Epoch: [1][   0/1000]	Loss 0.36 (0.36)	correct_t loss 0.02 (0.02)	SSL Ls 0.08 (0.08)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.63 (0.63)
Epoch: [1][ 100/1000]	Loss 0.31 (0.33)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.58 (0.61)
Epoch: [1][ 200/1000]	Loss 0.33 (0.33)	correct_t loss 0.02 (0.02)	SSL Ls 0.03 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.61 (0.61)
Epoch: [1][ 300/1000]	Loss 0.31 (0.33)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.60 (0.61)
Epoch: [1][ 400/1000]	Loss 0.31 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.59 (0.61)
Epoch: [1][ 500/1000]	Loss 0.33 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.63 (0.61)
Epoch: [1][ 600/1000]	Loss 0.30 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.57 (0.61)
Epoch: [1][ 700/1000]	Loss 0.33 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.04 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.61 (0.61)
Epoch: [1][ 800/1000]	Loss 0.31 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.02 (0.02)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.59 (0.61)
Epoch: [1][ 900/1000]	Loss 0.30 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.59 (0.61)
Test: [0/4]	Time  3.239 ( 3.239)	Loss 3.3271e-05 (3.3271e-05)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
 * Acc@1 100.000 Acc@5 100.000
lr: 0.00043869133765083086
Epoch: [2][   0/1000]	Loss 0.33 (0.33)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.00)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.64 (0.64)
Epoch: [2][ 100/1000]	Loss 0.33 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.63 (0.60)
Epoch: [2][ 200/1000]	Loss 0.34 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.66 (0.60)
Epoch: [2][ 300/1000]	Loss 0.34 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.66 (0.60)
Epoch: [2][ 400/1000]	Loss 0.31 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.58 (0.60)
Epoch: [2][ 500/1000]	Loss 0.31 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.60 (0.60)
Epoch: [2][ 600/1000]	Loss 0.32 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.63 (0.60)
Epoch: [2][ 700/1000]	Loss 0.32 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.61 (0.60)
Epoch: [2][ 800/1000]	Loss 0.31 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.00 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.60 (0.60)
Epoch: [2][ 900/1000]	Loss 0.31 (0.32)	correct_t loss 0.02 (0.02)	SSL Ls 0.01 (0.01)	s_Acc 100.0 (100.0)	t_Acc 100.0 (100.0)	Reg Loss 0.60 (0.60)
Test: [0/4]	Time  3.146 ( 3.146)	Loss 2.6218e-05 (2.6218e-05)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
 * Acc@1 100.000 Acc@5 100.000
best_acc1 = 100.0
Test: [0/4]	Time  3.297 ( 3.297)	Loss 8.2983e-05 (8.2983e-05)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
 * Acc@1 100.000 Acc@5 100.000
test_acc1 = 100.0
